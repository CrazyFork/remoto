<% contentFor("describe-field") { %>
	<code><%= underscore(field.Name) %></code>
	<%= if (field.Type.IsMultiple) { %>
	Array of
	<% } %>
	<%= if (field.Type.IsStruct) { %>
		<%= contentOf("structure-link", {"name":field.Type.Name}) %>
	<% } else { %>
		<%= field.Type.Name %>
	<% } %>
	<%= if (field.Comment != "") { %><span class='text-muted'>&mdash;<%= field.Comment %></span><% } %>
<% } %>
<% contentFor("describe-structure") { %>
	<%= contentOf("heading", {"text": structure.Name, "id": id, "tag": "h4"}) %>
	<p><%= structure.Comment %></p>
	<%= contentOf("describe-fields", {"fields": structure.Fields}) %>
<% } %>
<% contentFor("describe-fields") { %>
	<ul>
	<%= if (len(fields) == 0) { %>
		<li class='text-muted'>
			No fields
		</li>
	<% } else { %>
		<%= for (field) in fields { %>
			<li>
			<%= contentOf("describe-field", {"field": field}) %>
			</li>
		<% } %>
	<% } %>
	</ul>
<% } %>
<% contentFor("structure-link") { %><a href='#<%= def.PackageName %>_<%= replace(name, ".", "_") %>'><%= name %></a><% } %>
<% contentFor("heading") { %><<%= tag %> id='<%= id %>'><%= text %></<%= tag %>><% } %>
<html>
<head>
	<title><%= def.PackageName %> â€¢ Remoto by Machine Box</title>
	<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css" integrity="sha384-WskhaSGFgHYWDcbwN70/dfYBj47jz9qbsMId/iRN3ewGhXQFZCSftd1LZCfmhktB" crossorigin="anonymous">
	<style>
		body {
			padding-top: 50px;
		}
		.content {
			padding: 20px;
		}
		.page {
			padding-top: 10px;
			padding-bottom: 10px;
		}
		.highlightable {
			border-left: 5px transparent solid;
			transition: border-left 1s;
		}
		.highlightable.highlight {
			border-left: 5px #ddd solid;
			padding-left: 10px;
			transition: border-left 1s;
		}
	</style>
</head>
<body id='home'>
	<nav class='navbar fixed-top navbar-light bg-light'>
		<div class='container'>
			<a class="navbar-brand" href="#home"><%= upcase(def.PackageName) %></a>
			<div class='form-inline'>
				<input id='jump-to' list='symbols' type='text' class='form-control' placeholder='Jump to&hellip;'>
			</div>
		</div>
	</nav>
	<div class='page-body container'>
		<div class='row'>
			<div class='col'>
				<div class='content'>
					<%= if (len(def.Services) > 1) { %>
						<ul class='nav justify-content-end'>
						<%= for (service) in def.Services { %>
							<li class='nav=item'>
								<a class='nav-link' href='#<%= def.PackageName %>_<%= service.Name %>'><%= service.Name %></a>
							</li>
						<% } %>
						</ul>
						<hr>
					<% } %>
					<%= for (service) in def.Services { %>
						<section id='<%= def.PackageName %>_<%= service.Name %>'>
							<h2 class='display-4'>
								<%= service.Name %>
							</h2>
							<p class='lead'>
								<%= service.Comment %>
							</p>
							<div class='row'>
								<div class='col col-auto'>
									<ul class='list-unstyled'>
									<%= for (method) in service.Methods { %>
										<li>
											<a href='#<%= def.PackageName %>_<%= service.Name %>_<%= method.Name %>'><%= method.Name %></a>
										</li>
									<% } %>
									</ul>
								</div>
								<div class='col col-auto'>
									<ul class='list-unstyled'>
										<%= for (structure) in service.Structures { %>
											<%= if (!structure.IsRequestObject && !structure.IsResponseObject) { %>
											<li>
												<a href='#<%= def.PackageName %>_<%= structure.Name %>'><%= structure.Name %></a>
											</li>
											<% } %>
										<% } %>
									</ul>
								</div>
							</div>
							<hr>
							<%= for (method) in service.Methods { %>
								<section class='page highlightable' id='<%= def.PackageName %>_<%= service.Name %>_<%= method.Name %>'>
									<h4 class='title'>
										<%= method.Name %>
									</h4>
									<p>
										<%= method.Comment %>
									</p>
									<div class='row'>
										<div class='col col-auto'>
											<p>
												<%= contentOf("structure-link", {"name":method.RequestType.Name}) %>
											</p>
											<%= contentOf("describe-fields", {"fields": method.RequestType.Fields}) %>
										</div>
										<div class='col col-auto'>
											<p>
												<%= contentOf("structure-link", {"name":method.ResponseType.Name}) %>
											</p>
											<%= if (method.ResponseType.Name == "remototypes.FileResponse") { %>
												<ul>
													<li>File</li>
												</ul>
											<% } else { %>
												<%= contentOf("describe-fields", {"fields": method.ResponseType.Fields}) %>
											<% } %>
										<div>
									</div>
								</section>
								<hr>
							<% } %>
						</section>
					<% } %>
					<h3 id='objects' class='display-5'>Objects</h3>
					<p class='lead'>
						This section describes all the objects that are used in the entire <strong><%= def.PackageName %></strong> service.
					</p>
					<%= for (structure) in unique_structures(def) { %>
						<section class='page highlightable' id='<%= def.PackageName %>_<%= structure.Name %>'>
							<%= contentOf("describe-structure", {"structure": structure, "id": def.PackageName+"_"+structure.Name}) %>
						</section>
						<hr>
					<% } %>
					<h2 id='' class='display-5'>Special types</h2>
					<p class='lead'>
						This section describes specially handled types for situations
						more complex than simple key/value.
					</p>
					<section class='page highlightable' id='<%= def.PackageName %>_remototypes_FileResponse'>
						<%= contentOf("heading", {"text": "remototypes.FileResponse", "id": def.PackageName+"_remototypes_FileResponse", "tag": "h4"}) %>
						<p>
							<code>remototypes.FileResponse</code> is used by methods that return a single
							file as its result.
						</p>
						<p>
							Client libraries will provide a way to access the returned file.
						</p>
					</section>
					<section class='page highlightable' id='<%= def.PackageName %>_remototypes_File'>
						<%= contentOf("heading", {"text": "remototypes.File", "id": def.PackageName+"_remototypes_File", "tag": "h4"}) %>
						<p>
							<code>remototypes.File</code> represents a binary file. Client libraries will each have their
							own special way of submitting the files.
						</p>
					</section>
				</div>
			</div>
		</div>
	</div>

	<script src="https://code.jquery.com/jquery-3.3.1.min.js"></script>
	
	<!-- if you named your jQuery client something else, please update it here -->
	<script src='<%= def.PackageName %>.jquery.js'></script>

	<script>
		$(function(){

			$.fn.hide = function(){
				$(this).addClass('d-none')
			}
			$.fn.show = function(){
				$(this).removeClass('d-none')
			}

			function checkJumpTo(){
				var val = $(this).val().replace('.','_')
				var hit = null
				var hash = '<%= def.PackageName %>_' + val
				try{ hit = $('#'+hash) }catch{}
				if (hit && hit.length > 0) {
					$(this).val('')
					hit.niceScroll()
					location.hash = hash
				}
			}
			$('#jump-to').keyup(debounce(checkJumpTo, 500)).keyup(function(e){
				if (e.keyCode == 10 || e.keyCode == 13) {
					checkJumpTo.apply(this, arguments)
				}
			})
			$('#jump-to').change(function(){
				checkJumpTo.apply(this, arguments)
			})

			// niceScroll gently scrolls the page to this element.
			$.fn.niceScroll = function(noanimate){
				if ($(this).length === 0) { return }
				var x = $(this).offset().top - $.fn.niceScroll.topMargin
				if (noanimate) {
					return $('html,body').css({ 
						scrollTop: x
					})
				}
				return $('html,body').animate({ 
					scrollTop: x
				}, 'slow')
			}
			$.fn.niceScroll.topMargin = 60

			function changeRoute(route, noanimate) {
				if (!route) { return }
				$('.page.highlight').removeClass('highlight')
				var target = $(route).addClass('highlight')
				history.pushState(null, null, route)
				target.niceScroll(noanimate)
			}
			$(window).bind('hashchange', function() {
				changeRoute(location.hash)
			})
			var hash = location.hash
			if (hash.length > 0) {
				changeRoute(hash, true)
			}

			// $.scrollToTop scrolls the page to the top.
			$.scrollToTop = function(){
				$('html,body').animate({ 
					scrollTop: 0
				}, 'slow')
			}

			$('a[href^="#"]').click(function(e){
				e.preventDefault()
				console.info('--- click')
				changeRoute($(this).attr('href'))
			})

			// from https://davidwalsh.name/javascript-debounce-function
			// Returns a function, that, as long as it continues to be invoked, will not
			// be triggered. The function will be called after it stops being called for
			// N milliseconds. If `immediate` is passed, trigger the function on the
			// leading edge, instead of the trailing.
			function debounce(func, wait, immediate) {
				var timeout
				return function() {
					var context = this, args = arguments;
					var later = function() {
						timeout = null
						if (!immediate) func.apply(context, args)
					};
					var callNow = immediate && !timeout
					clearTimeout(timeout)
					timeout = setTimeout(later, wait)
					if (callNow) func.apply(context, args)
				}
			}

		})
	</script>
	<datalist id='symbols'>
		<%= for (service) in def.Services { %>
		<option value='<%= service.Name %>'>
		<%= for (method) in service.Methods { %>
		<option value='<%= service.Name %>.<%= method.Name %>'>
		<% } %>
		<% } %>
	</datalist>
</body>
</html>
