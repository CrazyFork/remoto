// Code generated by Remoto; DO NOT EDIT.

package example

// GreetFormatterClient accesses remote GreetFormatter services.
type GreetFormatterClient struct {
    // endpoint is the HTTP endpoint of the remote server.
    endpoint string
    // httpclient is the http.Client to use to make requests.
    httpclient *http.Client
}

// NewGreetFormatterClient makes a new GreetFormatterClient that will
// use the specified http.Client to make requests.
func NewGreetFormatterClient(endpoint string, client *http.Client) *GreetFormatterClient {
    return &GreetFormatterClient{
        endpoint: endpoint,
        httpclient: client,
    }
}

// 
func (c *GreetFormatterClient) GreetMulti(ctx context.Context, requests ...*GreetFormatRequest) (*GreetResponse, error) {
	b, err := json.Marshal(requests)
    if err != nil {
        return nil, errors.Wrap(err, "encode request")
    }

}


// GreeterClient accesses remote Greeter services.
type GreeterClient struct {
    // endpoint is the HTTP endpoint of the remote server.
    endpoint string
    // httpclient is the http.Client to use to make requests.
    httpclient *http.Client
}

// NewGreeterClient makes a new GreeterClient that will
// use the specified http.Client to make requests.
func NewGreeterClient(endpoint string, client *http.Client) *GreeterClient {
    return &GreeterClient{
        endpoint: endpoint,
        httpclient: client,
    }
}

// 
func (c *GreeterClient) GreetMulti(ctx context.Context, requests ...*GreetRequest) (*GreetResponse, error) {
	b, err := json.Marshal(requests)
    if err != nil {
        return nil, errors.Wrap(err, "encode request")
    }

}



// GreetFormatRequest is the request for GreetFormatter.Greet.
type GreetFormatRequest struct {
    // 
    Format string
    // 
    Name string
    
}

// GreetResponse is the response for Greeter.Greet and GreetFormatter.Greet.
type GreetResponse struct {
    // 
    Greeting string
    // Error is an error message if one occurred.
    Error string
    
}

// GreetRequest is the request for Greeter.Greet.
type GreetRequest struct {
    // 
    Name string
    
}


